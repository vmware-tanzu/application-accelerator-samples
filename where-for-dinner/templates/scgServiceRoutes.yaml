#@ load("@ytt:data", "data")

---
apiVersion: tanzu.vmware.com/v1
kind: SpringCloudGatewayRouteConfig
metadata:
  name: search-route-config
  namespace: #@ data.values.workloadNamespace
spec:
  routes:
  - predicates:
    - Path=/api/search/**  
    order: 1
    filters:
    - TokenRelay=
    - StripPrefix=0
    - RewritePath=/api/search(?<segment>/?.*), $\{segment}
    - RemoveRequestHeader=Forwarded
    tags:
    - search-api
#@ if data.values.enableSecurity == True:  
    tokenRelay: true 
#@ end
    uri: #@ 'http://where-for-dinner-search.' + data.values.workloadNamespace
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayMapping
metadata:
  name: search-route-mapping
  namespace: #@ data.values.workloadNamespace
spec:
  gatewayRef:
    name: #@ data.values.gatewayName
  routeConfigRef:
    name: search-route-config
---
apiVersion: tanzu.vmware.com/v1
kind: SpringCloudGatewayRouteConfig
metadata:
  name: availability-route-config
  namespace: #@ data.values.workloadNamespace
spec:
  routes:
  - predicates:
    - Path=/api/availability/**  
    order: 1
    filters:
    - StripPrefix=0
    - RewritePath=/api/availability(?<segment>/?.*), $\{segment}
    - RemoveRequestHeader=Forwarded
    tags:
    - search-api
#@ if data.values.enableSecurity == True:  
    tokenRelay: true 
#@ end    
    uri: #@ 'http://where-for-dinner-availability.' + data.values.workloadNamespace
---
apiVersion: "tanzu.vmware.com/v1"
kind: SpringCloudGatewayMapping
metadata:
  name: availability-route-mapping
  namespace: #@ data.values.workloadNamespace
spec:
  gatewayRef:
    name: #@ data.values.gatewayName
  routeConfigRef:
    name: availability-route-config
       