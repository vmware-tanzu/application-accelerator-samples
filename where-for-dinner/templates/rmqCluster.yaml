#@ load("@ytt:data", "data")

apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  annotations:
    rabbitmq.com/topology-allowed-namespaces: '*'
  labels:
    services.apps.tanzu.vmware.com/class: rabbitmq-where-for-dinner 
  name: #@ data.values.msgbrokerName
  namespace: #@ data.values.serviceNamespace
spec:
  replicas: #@ data.values.numRabbitMQClusterNodes
  resources:
    requests:
      cpu: 100m
      memory: 500Mi
    limits:
      cpu: 100m
      memory: 500Mi
  override:
    statefulSet:
      spec:
        template:
          spec:
            containers: 
               - name: rabbitmq
                 securityContext:
                   allowPrivilegeEscalation: false
                   capabilities:
                     drop:
                     - ALL
                   runAsNonRoot: true
                   seccompProfile:
                     type: RuntimeDefault
            initContainers:                      
               - name: setup-container
                 securityContext:
                   allowPrivilegeEscalation: false
                   capabilities:
                     drop:
                     - ALL
                   runAsNonRoot: true
                   seccompProfile:
                     type: RuntimeDefault
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: where-for-dinner-rabbitmqcluster-app-operator-reader
  labels:
    servicebinding.io/controller: "true"
rules:
- apiGroups: ["rabbitmq.com"]
  resources: ["rabbitmqclusters"]
  verbs: ["get", "list", "watch"]
---
apiVersion: services.apps.tanzu.vmware.com/v1alpha1
kind: ClusterInstanceClass
metadata:
  name: rabbitmq-where-for-dinner
spec:
  description:
    short: Where For Dinner RabbitMQ Clusters
  pool:
    group: rabbitmq.com
    kind: RabbitmqCluster
    labelSelector:
      matchLabels:
        services.apps.tanzu.vmware.com/class: rabbitmq-where-for-dinner