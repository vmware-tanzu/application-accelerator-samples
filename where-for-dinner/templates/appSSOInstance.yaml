#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ load("@ytt:regexp", "regexp")
    
#@ def buildIdentityProviders():
#@ if data.values.enableDefaultDevAccount == True:
    - name: dev-users
      internalUnsafe:
        users:
          - username: #@ data.values.devDefaultAccountUsername
            password: #@ data.values.devDefaultAccountPassword
            roles:
              - "patron"
#@ end            
#@ end

#@ def getURLHostName(url):
#@   host = regexp.replace("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?", url, "$4")  
#@   return host          
#@ end

---
apiVersion: sso.apps.tanzu.vmware.com/v1alpha1
kind: AuthServer
metadata:
  name: #@ data.values.appSSOName
  namespace: #@ data.values.workloadNamespace
  labels:
    name: #@ data.values.appSSOName
    app: where-for-dinner    
  annotations:
    sso.apps.tanzu.vmware.com/allow-client-namespaces: "*"
    sso.apps.tanzu.vmware.com/allow-unsafe-identity-provider: ""
    sso.apps.tanzu.vmware.com/allow-unsafe-issuer-uri: ""
spec:
  issuerURI: #@ data.values.appSSOIssuerURI
  tokenSignature:
    signAndVerifyKeyRef:
      name: #@ data.values.appSSOName +"-signing-key"
  identityProviders: #@ buildIdentityProviders()
---
apiVersion: secretgen.k14s.io/v1alpha1
kind: RSAKey
metadata:
  name: #@ data.values.appSSOName + "-signing-key"
  namespace: #@ data.values.workloadNamespace
spec:
  secretTemplate:
    type: Opaque
    stringData:
      key.pem: $(privateKey)      
      pub.pem: $(publicKey)
---
apiVersion: v1
kind: Service
metadata:
  name: #@ data.values.appSSOName
  namespace: workloads
spec:
  selector:
    app.kubernetes.io/part-of: #@ data.values.appSSOName
    app.kubernetes.io/component: authorization-server
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: #@ data.values.appSSOName
  namespace: workloads
spec:
  virtualhost:
    fqdn: #@ getURLHostName(data.values.appSSOIssuerURI)
  routes:
    - conditions:
        - prefix: /
      services:
        - name: #@ data.values.appSSOName
          port: 80
