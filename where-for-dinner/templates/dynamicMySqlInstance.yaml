---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xmysqlinstances.wherefordinner.database.example.org
spec:
  connectionSecretKeys:
  - host
  - password
  - port
  - provider
  - type
  - username
  - database
  group: wherefordinner.database.example.org
  names:
    kind: XMySQLInstance
    plural: xmysqlinstances
  claimNames:
    kind: MySQLInstance
    plural: mysqlinstances    
  versions:
  - name: v1alpha1
    referenceable: true
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: The OpenAPIV3Schema of this Composite Resource Definition.
            properties:
              storageGB:
                description: The desired storage capacity of a single replica, in GB.
                type: integer
              serviceNamespace:
                description: The namespace that the service will be deployed to.
                type: string                 
            type: object
        type: object
    served: true
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xmysqlinstances.wherefordinner.database.example.org
spec:
  compositeTypeRef:
    apiVersion: wherefordinner.database.example.org/v1alpha1
    kind: XMySQLInstance
  publishConnectionDetailsWithStoreConfigRef:
    name: default
  resources:
  - base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: with.sql.tanzu.vmware.com/v1
            kind: MySQL
            metadata:
              namespace: service-instances
            spec:
              highAvailability:
                enabled: false
            storageSize: 1Gi
        connectionDetails:
        - apiVersion: v1
          kind: Secret
          fieldPath: data.provider
          toConnectionSecretKey: provider
        - apiVersion: v1
          kind: Secret
          fieldPath: data.type
          toConnectionSecretKey: type
        - apiVersion: v1
          kind: Secret
          fieldPath: data.host
          toConnectionSecretKey: host
        - apiVersion: v1
          kind: Secret
          fieldPath: data.port
          toConnectionSecretKey: port
        - apiVersion: v1
          kind: Secret
          fieldPath: data.username
          toConnectionSecretKey: username
        - apiVersion: v1
          kind: Secret
          fieldPath: data.password
          toConnectionSecretKey: password
        - apiVersion: v1
          kind: Secret
          fieldPath: data.database
          toConnectionSecretKey: database
        writeConnectionSecretToRef:
          namespace: default          
    patches:
      - fromFieldPath: spec.serviceNamespace
        toFieldPath: spec.writeConnectionSecretToRef.namespace    
        type: FromCompositeFieldPath          
      - fromFieldPath: metadata.uid
        toFieldPath: spec.writeConnectionSecretToRef.name
        transforms:
        - string:
            fmt: '%s-mysql'
            type: Format
          type: string
        type: FromCompositeFieldPath          
      - fromFieldPath: spec.serviceNamespace
        toFieldPath: spec.forProvider.manifest.metadata.namespace
        type: FromCompositeFieldPath       
      - fromFieldPath: metadata.name
        toFieldPath: spec.forProvider.manifest.metadata.name
        type: FromCompositeFieldPath
      - fromFieldPath: spec.replicas
        toFieldPath: spec.forProvider.manifest.spec.replicas
        type: FromCompositeFieldPath
      - fromFieldPath: spec.storageGB
        toFieldPath: spec.forProvider.manifest.spec.storageSize
        transforms:
        - string:
            fmt: '%dGi'
            type: Format
          type: string
        type: FromCompositeFieldPath
      - fromFieldPath: metadata.name
        toFieldPath: spec.connectionDetails[0].name
        transforms:
        - string:
            fmt: '%s-app-user-db-secret'
            type: Format
          type: string
        type: FromCompositeFieldPath     
      - fromFieldPath: metadata.name
        toFieldPath: spec.connectionDetails[1].name
        transforms:
        - string:
            fmt: '%s-app-user-db-secret'
            type: Format
          type: string
        type: FromCompositeFieldPath   
      - fromFieldPath: metadata.name
        toFieldPath: spec.connectionDetails[2].name
        transforms:
        - string:
            fmt: '%s-app-user-db-secret'
            type: Format
          type: string
        type: FromCompositeFieldPath 
      - fromFieldPath: metadata.name
        toFieldPath: spec.connectionDetails[3].name
        transforms:
        - string:
            fmt: '%s-app-user-db-secret'
            type: Format
          type: string
        type: FromCompositeFieldPath 
      - fromFieldPath: metadata.name
        toFieldPath: spec.connectionDetails[4].name
        transforms:
        - string:
            fmt: '%s-app-user-db-secret'
            type: Format
          type: string
        type: FromCompositeFieldPath 
      - fromFieldPath: metadata.name
        toFieldPath: spec.connectionDetails[5].name
        transforms:
        - string:
            fmt: '%s-app-user-db-secret'
            type: Format
          type: string
        type: FromCompositeFieldPath 
      - fromFieldPath: metadata.name
        toFieldPath: spec.connectionDetails[6].name
        transforms:
        - string:
            fmt: '%s-app-user-db-secret'
            type: Format
          type: string
        type: FromCompositeFieldPath 
      - fromFieldPath: spec.serviceNamespace
        toFieldPath: spec.connectionDetails[0].namespace
        type: FromCompositeFieldPath    
      - fromFieldPath: spec.serviceNamespace
        toFieldPath: spec.connectionDetails[1].namespace
        type: FromCompositeFieldPath    
      - fromFieldPath: spec.serviceNamespace
        toFieldPath: spec.connectionDetails[2].namespace
        type: FromCompositeFieldPath    
      - fromFieldPath: spec.serviceNamespace
        toFieldPath: spec.connectionDetails[3].namespace
        type: FromCompositeFieldPath    
      - fromFieldPath: spec.serviceNamespace
        toFieldPath: spec.connectionDetails[4].namespace
        type: FromCompositeFieldPath    
      - fromFieldPath: spec.serviceNamespace
        toFieldPath: spec.connectionDetails[5].namespace
        type: FromCompositeFieldPath    
      - fromFieldPath: spec.serviceNamespace
        toFieldPath: spec.connectionDetails[6].namespace
        type: FromCompositeFieldPath
    connectionDetails:
    - fromConnectionSecretKey: type
      name: type
    - fromConnectionSecretKey: provider
      name: provider
    - fromConnectionSecretKey: password     
      name: password
    - fromConnectionSecretKey: database
      name: database    
    - fromConnectionSecretKey: username
      name: username      
    - fromConnectionSecretKey: host
      name: host       
    - fromConnectionSecretKey: port 
      name: port           
---
apiVersion: services.apps.tanzu.vmware.com/v1alpha1
kind: ClusterInstanceClass
metadata:
  name: db-crossplane-where-for-dinner
spec:
  description:
    short: MySQL
  provisioner:
    crossplane:
      compositeResourceDefinition: xmysqlinstances.wherefordinner.database.example.org
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
 name: crossplane-kubernetes-provider-mysql-read-writer
 labels:
   services.tanzu.vmware.com/aggregate-to-provider-kubernetes: "true"
rules:
- apiGroups: ["with.sql.tanzu.vmware.com"]
  resources: ["mysqls"]
  verbs: ["*"]